arduino mega pins:
54 digital io (12 are pwm... 2 to 13)
16 analog io
70 total

pin 13 is led, so maybe don't use... so 69 available

1 comm, 4 heaters, 12 endstops, 7 motors?

motors: 5
motor step
motor dir
motor enable
motor microstep 0
motor microstep 1

heaters: 3
heater adc input
heater enable
heater fan enable

heater power:
ground
adc power
fan power
heater power


endstop: 1
endstop input

comm: 4
comm ready
comm valid
comm rx (clk)
comm tx (cs)
comm nc (miso)
comm nc (mosi)

1 comm:       1 x 4 =  4
4 heaters:    4 x 3 = 12
12 endstops: 12 x 1 = 12
7 motors:     7 x 5 = 35
total pins:  4 + 12 + 12 + 35 = 63

make jumper connection for aref and adc supply voltage and choose between 3.3 and 5v

for comm, have first byte be status byte, last byte be checksum:
make define to have error checking... if not, the whole thing progresses faster
bit flags:
0 - transmit(1) or request(0)
1 - start of transfer (1)
2 - slave send ready (1) - saying slave can send a transfer request
3 - 
4 - 
5 - 
6 - 
7 - end of transfer (1)

have first byte be flags/info, next two bytes be length of transfer, last byte be checksum, wait for confirmation byte to finish or resend
master:
send startup flag, repeat every x counts until slave sends startup flag,
send connected flag, repeat every x counts until slave sends connected flag,
move to idle state when it receives connected flag from master

slave:
wait for startup flag from master, once it receives that, send startup flag,
wait for connected flag from master, move to connected state, send connected flag every time it receives connected flag from master

master transmit: (first byte of transfer is opcode)
check slave tx ready flag, if that's low start transfer,
send transmit request flag, repeat every x counts until slave sends transmit confirmation
once received transmit confirmation, send 2 bytes of length of transfer (including checksum byte),
send transfer data,
send checksum byte,
wait for transfer received flag to either restart transfer or complete transfer

master receive:
just do a transfer and make the opcode a request opcode.

slave transmit:
raise slave tx ready bit,
wait for flag bytes from master with receive confirmation, then do transmit state machine.

solder 3.3 to pin and 5.0 to pin and have middle pin connect to aref to set analog reference input

3.3 (to heater board) 5.5
x	    x		x
3.3 (to analog refin) 5.5
x	    x		x

looking at screw hole:
heater: L: heat on, C: adc in, R: fan on
motor: L2: ms1, L1: ms0, C: EN, R1: Dir, R2: Step
ES: L is 1, R is 12


a0  - heater 0 adc
a1  - heater 1 adc
a2  - heater 2 adc
a3  - heater 3 adc
a4  - es0
a5  - es1
a6  - es2
a7  - es3
a8  - es4
a9  - es5
a10 - es6
a11 - es7
a12 - es8
a13 - es9
a14 - es10
a15 - es11

d0  - serial rx
d1  - serial tx
d2  - es interrupt - (interrupt) / (pwm)
d3  - other interrupt - (interrupt) / (pwm)
d4  - m_0_step - (pwm)
d5  - m_1_step - (pwm)
d6  - m_2_step - (pwm)
d7  - m_3_step - (pwm)
d8  - m_4_step - (pwm)
d9  - m_5_step - (pwm)
d10 - m_6_step - (pwm)
d11 - sreq - reserved - (pwm)
d12 - sack - reserved - (pwm)
d13 - nc - (pwm) / (led)
d14 - heater on 0
d15 - heater on 1
d16 - heater on 2
d17 - heater on 3
d18 - fan on 0 - (interrupt)
d19 - fan on 1 - (interrupt)
d20 - fan on 2 - (interrupt)
d21 - fan on 3 - (interrupt)
d22 - en0
d23 - dir0
d24 - ms00
d25 - ms10
d26 - en1
d27 - dir1
d28 - ms01
d29 - ms11
d30 - en2
d31 - dir2
d32 - ms02
d33 - ms12
d34 - en3
d35 - dir3
d36 - ms03
d37 - ms13
d38 - en4
d39 - dir4
d40 - ms04
d41 - ms14
d42 - en5
d43 - dir5
d44 - ms05 - (pwm)
d45 - ms15 - (pwm)
d46 - en6 - (pwm)
d47 - dir6
d48 - ms06
d49 - ms16
d50 - mosi - reserved - (spi)
d51 - miso - reserved - (spi)
d52 - sck - reserved - (spi)
d53 - ss - reserved - (spi)

1 comm, 4 heaters, 12 endstops, 7 motors?
	rx
	tx
	mosi
	miso
	sck
	ss
	sreq
	sack

	fan on 0
	heat on 0
	adc in 0

	fan on 1
	heat on 1
	adc in 1

	fan on 2
	heat on 2
	adc in 2

	fan on 3
	heat on 3
	adc in 3

	es0
	es1
	es2
	es3
	es4
	es5
	es6
	es7
	es8
	es9
	es10
	es11

	en0
	dir0
	step0
	ms00
	ms10

	en1
	dir1
	step1
	ms01
	ms11

	en2
	dir2
	step2
	ms02
	ms12

	en3
	dir3
	step3
	ms03
	ms13

	en4
	dir4
	step4
	ms04
	ms14

	en5
	dir5
	step5
	ms05
	ms15

	en6
	dir6
	step6
	ms06
	ms16

	led reserve
	es interrupt
	other interrupt